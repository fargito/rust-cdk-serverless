on:
  pull_request:
    types: [closed]

name: ðŸ§½ PR Cleanup

permissions:
  id-token: write # this is required for AWS https://github.com/aws-actions/configure-aws-credentials#usage

env:
  CI: true
  AWS_REGION: eu-west-1
  STAGE: pr-${{ github.event.number }}

defaults:
  run:
    shell: bash

jobs:
  clean-cdk-env:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: pnpm

      - name: Install Node.js dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate fake Lambda assets # this is required for the cdk, and we don't want to actually build
        run: |
          mkdir rust-lambdas/target;
          mkdir rust-lambdas/target/lambda;
          for asset in create-todo list-todos delete-todo on-todo-created on-todo-deleted; do
            mkdir rust-lambdas/target/lambda/$asset;
            touch rust-lambdas/target/lambda/$asset/bootstrap.zip;
          done;

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}

      - name: ðŸ§¹ CDK garbage collection
        run: pnpm run clean

      - name: ðŸ§½ Destroy
        run: pnpm run destroy --context stage=${{ env.STAGE }} --force
